%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

{erl_opts, [
        debug_info,
        export_all,
        {src_dirs, ["src"]},
        {parse_transform, lager_transform}
    ]}.

{eunit_opts, [verbose,
   {report, {eunit_surefire, [{dir, "."}]}}]}.

{edoc_opts, [{doclet, edown_doclet},
             {source_path, ["src"]},
             {stylesheet, ""},
             {image, ""},
             {app_default, "http://www.erlang.org/doc/man"},
             {edown_target, github},
             {top_level_readme,
              {"./README.md", "http://github.com/SilentCircle/gcm_sim"}}
            ]}.


{clean_files, ["test/*.beam"]}.

{ct_opts, [{spec, "gcm_sim.test.spec"}]}.

{dialyzer, [{warning, [unknown,
                       unmatched_returns,
                       error_handling,
                       race_conditions]}]}.

{deps, [
        {lager, ".*",
         {git, "git@github.com:basho/lager.git", {branch, "master"}}},
        {jsx, ".*",
         {git, "https://github.com/talentdeficit/jsx.git", {branch, "master"}}},
        {webmachine, ".*",
         {git, "git@github.com:SilentCircle/webmachine.git", {branch, "master"}}},
        {sc_util, ".*",
         {git, "git@github.com:SilentCircle/sc_util.git", {branch, "master"}}}
       ]
}.

{relx, [
        {release, {gcm_sim, "0.0.1"}, [gcm_sim]},
        {dev_mode, true},
        {include_erts, true},
        {extended_start_script, true},
        {overlay_vars, "config/vars.config"},
        {overlay, [
                   {mkdir, "log/sasl"},
                   {template, "config/sys.config", "sys.config"},
                   {copy, "config/vm.args", "vm.args"}
                  ]}
       ]}.
